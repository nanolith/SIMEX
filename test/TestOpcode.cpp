/**
 * \file TestOpcode.cpp
 *
 * Test that Opcodes match the SIMEX specification.
 *
 * Copyright (C) 2016 Justin Handville - All Rights Reserved.
 *
 * This file is part of the SIMEX Virtual Machine which is released under the
 * MIT License.  See LICENSE.txt in the root of this distribution for further
 * information.
 */

#include <gtest/gtest.h>
#include <simex/Opcode.h>

using namespace simex;

/**
 * Test that all instruction opcodes match the SIMEX specification.
 */
TEST(Opcode, opcode_spec)
{
    EXPECT_EQ((uint8_t)0x2E, opcode2byte(Opcode::OP_16ADDU));
    EXPECT_EQ((uint8_t)0x2F, opcode2byte(Opcode::OP_16ADDUI));
    EXPECT_EQ((uint8_t)0x28, opcode2byte(Opcode::OP_2ADDU));
    EXPECT_EQ((uint8_t)0x29, opcode2byte(Opcode::OP_2ADDUI));
    EXPECT_EQ((uint8_t)0x2A, opcode2byte(Opcode::OP_4ADDU));
    EXPECT_EQ((uint8_t)0x2B, opcode2byte(Opcode::OP_4ADDUI));
    EXPECT_EQ((uint8_t)0x2C, opcode2byte(Opcode::OP_8ADDU));
    EXPECT_EQ((uint8_t)0x2D, opcode2byte(Opcode::OP_8ADDUI));
    EXPECT_EQ((uint8_t)0x20, opcode2byte(Opcode::OP_ADD));
    EXPECT_EQ((uint8_t)0x21, opcode2byte(Opcode::OP_ADDI));
    EXPECT_EQ((uint8_t)0x22, opcode2byte(Opcode::OP_ADDU));
    EXPECT_EQ((uint8_t)0x23, opcode2byte(Opcode::OP_ADDUI));
    EXPECT_EQ((uint8_t)0xC8, opcode2byte(Opcode::OP_AND));
    EXPECT_EQ((uint8_t)0xC9, opcode2byte(Opcode::OP_ANDI));
    EXPECT_EQ((uint8_t)0xCA, opcode2byte(Opcode::OP_ANDN));
    EXPECT_EQ((uint8_t)0xEC, opcode2byte(Opcode::OP_ANDNH));
    EXPECT_EQ((uint8_t)0xCB, opcode2byte(Opcode::OP_ANDNI));
    EXPECT_EQ((uint8_t)0xEF, opcode2byte(Opcode::OP_ANDNL));
    EXPECT_EQ((uint8_t)0xED, opcode2byte(Opcode::OP_ANDNMH));
    EXPECT_EQ((uint8_t)0xEE, opcode2byte(Opcode::OP_ANDNML));
    EXPECT_EQ((uint8_t)0x4E, opcode2byte(Opcode::OP_BEV));
    EXPECT_EQ((uint8_t)0x4F, opcode2byte(Opcode::OP_BEVB));
    EXPECT_EQ((uint8_t)0x40, opcode2byte(Opcode::OP_BN));
    EXPECT_EQ((uint8_t)0x41, opcode2byte(Opcode::OP_BNB));
    EXPECT_EQ((uint8_t)0x48, opcode2byte(Opcode::OP_BNN));
    EXPECT_EQ((uint8_t)0x49, opcode2byte(Opcode::OP_BNNB));
    EXPECT_EQ((uint8_t)0x4C, opcode2byte(Opcode::OP_BNP));
    EXPECT_EQ((uint8_t)0x4D, opcode2byte(Opcode::OP_BNPB));
    EXPECT_EQ((uint8_t)0x4A, opcode2byte(Opcode::OP_BNZ));
    EXPECT_EQ((uint8_t)0x4B, opcode2byte(Opcode::OP_BNZB));
    EXPECT_EQ((uint8_t)0x46, opcode2byte(Opcode::OP_BOD));
    EXPECT_EQ((uint8_t)0x47, opcode2byte(Opcode::OP_BODB));
    EXPECT_EQ((uint8_t)0x44, opcode2byte(Opcode::OP_BP));
    EXPECT_EQ((uint8_t)0x45, opcode2byte(Opcode::OP_BPB));
    EXPECT_EQ((uint8_t)0x42, opcode2byte(Opcode::OP_BZ));
    EXPECT_EQ((uint8_t)0x43, opcode2byte(Opcode::OP_BZB));
    EXPECT_EQ((uint8_t)0x30, opcode2byte(Opcode::OP_CMP));
    EXPECT_EQ((uint8_t)0x31, opcode2byte(Opcode::OP_CMPI));
    EXPECT_EQ((uint8_t)0x32, opcode2byte(Opcode::OP_CMPU));
    EXPECT_EQ((uint8_t)0x33, opcode2byte(Opcode::OP_CMPUI));
    EXPECT_EQ((uint8_t)0x6E, opcode2byte(Opcode::OP_CSEV));
    EXPECT_EQ((uint8_t)0x6F, opcode2byte(Opcode::OP_CSEVI));
    EXPECT_EQ((uint8_t)0x60, opcode2byte(Opcode::OP_CSN));
    EXPECT_EQ((uint8_t)0x61, opcode2byte(Opcode::OP_CSNI));
    EXPECT_EQ((uint8_t)0x68, opcode2byte(Opcode::OP_CSNN));
    EXPECT_EQ((uint8_t)0x69, opcode2byte(Opcode::OP_CSNNI));
    EXPECT_EQ((uint8_t)0x6C, opcode2byte(Opcode::OP_CSNP));
    EXPECT_EQ((uint8_t)0x6D, opcode2byte(Opcode::OP_CSNPI));
    EXPECT_EQ((uint8_t)0x6A, opcode2byte(Opcode::OP_CSNZ));
    EXPECT_EQ((uint8_t)0x6B, opcode2byte(Opcode::OP_CSNZI));
    EXPECT_EQ((uint8_t)0x66, opcode2byte(Opcode::OP_CSOD));
    EXPECT_EQ((uint8_t)0x67, opcode2byte(Opcode::OP_CSODI));
    EXPECT_EQ((uint8_t)0x64, opcode2byte(Opcode::OP_CSP));
    EXPECT_EQ((uint8_t)0x65, opcode2byte(Opcode::OP_CSPI));
    EXPECT_EQ((uint8_t)0x94, opcode2byte(Opcode::OP_CSWAP));
    EXPECT_EQ((uint8_t)0x95, opcode2byte(Opcode::OP_CSWAPI));
    EXPECT_EQ((uint8_t)0x62, opcode2byte(Opcode::OP_CSZ));
    EXPECT_EQ((uint8_t)0x63, opcode2byte(Opcode::OP_CSZI));
    EXPECT_EQ((uint8_t)0x1C, opcode2byte(Opcode::OP_DIV));
    EXPECT_EQ((uint8_t)0x1D, opcode2byte(Opcode::OP_DIVI));
    EXPECT_EQ((uint8_t)0x1E, opcode2byte(Opcode::OP_DIVU));
    EXPECT_EQ((uint8_t)0x1F, opcode2byte(Opcode::OP_DIVUI));
    EXPECT_EQ((uint8_t)0x04, opcode2byte(Opcode::OP_FADD));
    EXPECT_EQ((uint8_t)0x01, opcode2byte(Opcode::OP_FCMP));
    EXPECT_EQ((uint8_t)0x11, opcode2byte(Opcode::OP_FCMPE));
    EXPECT_EQ((uint8_t)0x14, opcode2byte(Opcode::OP_FDIV));
    EXPECT_EQ((uint8_t)0x03, opcode2byte(Opcode::OP_FEQL));
    EXPECT_EQ((uint8_t)0x13, opcode2byte(Opcode::OP_FEQLE));
    EXPECT_EQ((uint8_t)0x17, opcode2byte(Opcode::OP_FINT));
    EXPECT_EQ((uint8_t)0x05, opcode2byte(Opcode::OP_FIX));
    EXPECT_EQ((uint8_t)0x07, opcode2byte(Opcode::OP_FIXU));
    EXPECT_EQ((uint8_t)0x08, opcode2byte(Opcode::OP_FLOT));
    EXPECT_EQ((uint8_t)0x09, opcode2byte(Opcode::OP_FLOTI));
    EXPECT_EQ((uint8_t)0x0A, opcode2byte(Opcode::OP_FLOTU));
    EXPECT_EQ((uint8_t)0x0B, opcode2byte(Opcode::OP_FLOTUI));
    EXPECT_EQ((uint8_t)0x10, opcode2byte(Opcode::OP_FMUL));
    EXPECT_EQ((uint8_t)0x16, opcode2byte(Opcode::OP_FREM));
    EXPECT_EQ((uint8_t)0x15, opcode2byte(Opcode::OP_FSQRT));
    EXPECT_EQ((uint8_t)0x06, opcode2byte(Opcode::OP_FSUB));
    EXPECT_EQ((uint8_t)0x02, opcode2byte(Opcode::OP_FUN));
    EXPECT_EQ((uint8_t)0x12, opcode2byte(Opcode::OP_FUNE));
    EXPECT_EQ((uint8_t)0xFE, opcode2byte(Opcode::OP_GET));
    EXPECT_EQ((uint8_t)0xF4, opcode2byte(Opcode::OP_GETA));
    EXPECT_EQ((uint8_t)0xF5, opcode2byte(Opcode::OP_GETAB));
    EXPECT_EQ((uint8_t)0x9E, opcode2byte(Opcode::OP_GO));
    EXPECT_EQ((uint8_t)0x9F, opcode2byte(Opcode::OP_GOI));
    EXPECT_EQ((uint8_t)0xE4, opcode2byte(Opcode::OP_INCH));
    EXPECT_EQ((uint8_t)0xE7, opcode2byte(Opcode::OP_INCL));
    EXPECT_EQ((uint8_t)0xE5, opcode2byte(Opcode::OP_INCMH));
    EXPECT_EQ((uint8_t)0xE6, opcode2byte(Opcode::OP_INCML));
    EXPECT_EQ((uint8_t)0xF0, opcode2byte(Opcode::OP_JMP));
    EXPECT_EQ((uint8_t)0xF1, opcode2byte(Opcode::OP_JMPB));
    EXPECT_EQ((uint8_t)0x80, opcode2byte(Opcode::OP_LDB));
    EXPECT_EQ((uint8_t)0x81, opcode2byte(Opcode::OP_LDBI));
    EXPECT_EQ((uint8_t)0x82, opcode2byte(Opcode::OP_LDBU));
    EXPECT_EQ((uint8_t)0x83, opcode2byte(Opcode::OP_LDBUI));
    EXPECT_EQ((uint8_t)0x92, opcode2byte(Opcode::OP_LDHT));
    EXPECT_EQ((uint8_t)0x93, opcode2byte(Opcode::OP_LDHTI));
    EXPECT_EQ((uint8_t)0x8C, opcode2byte(Opcode::OP_LDO));
    EXPECT_EQ((uint8_t)0x8D, opcode2byte(Opcode::OP_LDOI));
    EXPECT_EQ((uint8_t)0x8E, opcode2byte(Opcode::OP_LDOU));
    EXPECT_EQ((uint8_t)0x8F, opcode2byte(Opcode::OP_LDOUI));
    EXPECT_EQ((uint8_t)0x90, opcode2byte(Opcode::OP_LDSF));
    EXPECT_EQ((uint8_t)0x91, opcode2byte(Opcode::OP_LDSFI));
    EXPECT_EQ((uint8_t)0x88, opcode2byte(Opcode::OP_LDT));
    EXPECT_EQ((uint8_t)0x89, opcode2byte(Opcode::OP_LDTI));
    EXPECT_EQ((uint8_t)0x8A, opcode2byte(Opcode::OP_LDTU));
    EXPECT_EQ((uint8_t)0x8B, opcode2byte(Opcode::OP_LDTUI));
    EXPECT_EQ((uint8_t)0x96, opcode2byte(Opcode::OP_LDUNC));
    EXPECT_EQ((uint8_t)0x97, opcode2byte(Opcode::OP_LDUNCI));
    EXPECT_EQ((uint8_t)0x84, opcode2byte(Opcode::OP_LDW));
    EXPECT_EQ((uint8_t)0x85, opcode2byte(Opcode::OP_LDWI));
    EXPECT_EQ((uint8_t)0x86, opcode2byte(Opcode::OP_LDWU));
    EXPECT_EQ((uint8_t)0x87, opcode2byte(Opcode::OP_LDWUI));
    EXPECT_EQ((uint8_t)0x18, opcode2byte(Opcode::OP_MUL));
    EXPECT_EQ((uint8_t)0x19, opcode2byte(Opcode::OP_MULI));
    EXPECT_EQ((uint8_t)0x1A, opcode2byte(Opcode::OP_MULU));
    EXPECT_EQ((uint8_t)0x1B, opcode2byte(Opcode::OP_MULUI));
    EXPECT_EQ((uint8_t)0xD8, opcode2byte(Opcode::OP_MUX));
    EXPECT_EQ((uint8_t)0xD9, opcode2byte(Opcode::OP_MUXI));
    EXPECT_EQ((uint8_t)0xCC, opcode2byte(Opcode::OP_NAND));
    EXPECT_EQ((uint8_t)0xCD, opcode2byte(Opcode::OP_NANDI));
    EXPECT_EQ((uint8_t)0x34, opcode2byte(Opcode::OP_NEG));
    EXPECT_EQ((uint8_t)0x35, opcode2byte(Opcode::OP_NEGI));
    EXPECT_EQ((uint8_t)0x36, opcode2byte(Opcode::OP_NEGU));
    EXPECT_EQ((uint8_t)0x37, opcode2byte(Opcode::OP_NEGUI));
    EXPECT_EQ((uint8_t)0xC4, opcode2byte(Opcode::OP_NOR));
    EXPECT_EQ((uint8_t)0xC5, opcode2byte(Opcode::OP_NORI));
    EXPECT_EQ((uint8_t)0xCE, opcode2byte(Opcode::OP_NXOR));
    EXPECT_EQ((uint8_t)0xCF, opcode2byte(Opcode::OP_NXORI));
    EXPECT_EQ((uint8_t)0xC0, opcode2byte(Opcode::OP_OR));
    EXPECT_EQ((uint8_t)0xE8, opcode2byte(Opcode::OP_ORH));
    EXPECT_EQ((uint8_t)0xC1, opcode2byte(Opcode::OP_ORI));
    EXPECT_EQ((uint8_t)0xEB, opcode2byte(Opcode::OP_ORL));
    EXPECT_EQ((uint8_t)0xE9, opcode2byte(Opcode::OP_ORMH));
    EXPECT_EQ((uint8_t)0xEA, opcode2byte(Opcode::OP_ORML));
    EXPECT_EQ((uint8_t)0xC2, opcode2byte(Opcode::OP_ORN));
    EXPECT_EQ((uint8_t)0xC3, opcode2byte(Opcode::OP_ORNI));
    EXPECT_EQ((uint8_t)0x5E, opcode2byte(Opcode::OP_PBEV));
    EXPECT_EQ((uint8_t)0x5F, opcode2byte(Opcode::OP_PBEVB));
    EXPECT_EQ((uint8_t)0x50, opcode2byte(Opcode::OP_PBN));
    EXPECT_EQ((uint8_t)0x51, opcode2byte(Opcode::OP_PBNB));
    EXPECT_EQ((uint8_t)0x58, opcode2byte(Opcode::OP_PBNN));
    EXPECT_EQ((uint8_t)0x59, opcode2byte(Opcode::OP_PBNNB));
    EXPECT_EQ((uint8_t)0x5C, opcode2byte(Opcode::OP_PBNP));
    EXPECT_EQ((uint8_t)0x5D, opcode2byte(Opcode::OP_PBNPB));
    EXPECT_EQ((uint8_t)0x5A, opcode2byte(Opcode::OP_PBNZ));
    EXPECT_EQ((uint8_t)0x5B, opcode2byte(Opcode::OP_PBNZB));
    EXPECT_EQ((uint8_t)0x56, opcode2byte(Opcode::OP_PBOD));
    EXPECT_EQ((uint8_t)0x57, opcode2byte(Opcode::OP_PBODB));
    EXPECT_EQ((uint8_t)0x54, opcode2byte(Opcode::OP_PBP));
    EXPECT_EQ((uint8_t)0x55, opcode2byte(Opcode::OP_PBPB));
    EXPECT_EQ((uint8_t)0x52, opcode2byte(Opcode::OP_PBZ));
    EXPECT_EQ((uint8_t)0x53, opcode2byte(Opcode::OP_PBZB));
    EXPECT_EQ((uint8_t)0xF8, opcode2byte(Opcode::OP_POP));
    EXPECT_EQ((uint8_t)0xBE, opcode2byte(Opcode::OP_PUSHGO));
    EXPECT_EQ((uint8_t)0xBF, opcode2byte(Opcode::OP_PUSHGOI));
    EXPECT_EQ((uint8_t)0xF2, opcode2byte(Opcode::OP_PUSHJ));
    EXPECT_EQ((uint8_t)0xF3, opcode2byte(Opcode::OP_PUSHJB));
    EXPECT_EQ((uint8_t)0xF6, opcode2byte(Opcode::OP_PUT));
    EXPECT_EQ((uint8_t)0xF7, opcode2byte(Opcode::OP_PUTI));
    EXPECT_EQ((uint8_t)0x98, opcode2byte(Opcode::OP_RESERVED_x98));
    EXPECT_EQ((uint8_t)0x99, opcode2byte(Opcode::OP_RESERVED_x99));
    EXPECT_EQ((uint8_t)0x9A, opcode2byte(Opcode::OP_RESERVED_x9A));
    EXPECT_EQ((uint8_t)0x9B, opcode2byte(Opcode::OP_RESERVED_x9B));
    EXPECT_EQ((uint8_t)0x9C, opcode2byte(Opcode::OP_RESERVED_x9C));
    EXPECT_EQ((uint8_t)0x9D, opcode2byte(Opcode::OP_RESERVED_x9D));
    EXPECT_EQ((uint8_t)0xB8, opcode2byte(Opcode::OP_RESERVED_xB8));
    EXPECT_EQ((uint8_t)0xB9, opcode2byte(Opcode::OP_RESERVED_xB9));
    EXPECT_EQ((uint8_t)0xBA, opcode2byte(Opcode::OP_RESERVED_xBA));
    EXPECT_EQ((uint8_t)0xBB, opcode2byte(Opcode::OP_RESERVED_xBB));
    EXPECT_EQ((uint8_t)0xBC, opcode2byte(Opcode::OP_RESERVED_xBC));
    EXPECT_EQ((uint8_t)0xBD, opcode2byte(Opcode::OP_RESERVED_xBD));
    EXPECT_EQ((uint8_t)0xD0, opcode2byte(Opcode::OP_RESERVED_xD0));
    EXPECT_EQ((uint8_t)0xD1, opcode2byte(Opcode::OP_RESERVED_xD1));
    EXPECT_EQ((uint8_t)0xD2, opcode2byte(Opcode::OP_RESERVED_xD2));
    EXPECT_EQ((uint8_t)0xD3, opcode2byte(Opcode::OP_RESERVED_xD3));
    EXPECT_EQ((uint8_t)0xD4, opcode2byte(Opcode::OP_RESERVED_xD4));
    EXPECT_EQ((uint8_t)0xD5, opcode2byte(Opcode::OP_RESERVED_xD5));
    EXPECT_EQ((uint8_t)0xD6, opcode2byte(Opcode::OP_RESERVED_xD6));
    EXPECT_EQ((uint8_t)0xD7, opcode2byte(Opcode::OP_RESERVED_xD7));
    EXPECT_EQ((uint8_t)0xDA, opcode2byte(Opcode::OP_RESERVED_xDA));
    EXPECT_EQ((uint8_t)0xDB, opcode2byte(Opcode::OP_RESERVED_xDB));
    EXPECT_EQ((uint8_t)0xDC, opcode2byte(Opcode::OP_RESERVED_xDC));
    EXPECT_EQ((uint8_t)0xDD, opcode2byte(Opcode::OP_RESERVED_xDD));
    EXPECT_EQ((uint8_t)0xDE, opcode2byte(Opcode::OP_RESERVED_xDE));
    EXPECT_EQ((uint8_t)0xDF, opcode2byte(Opcode::OP_RESERVED_xDF));
    EXPECT_EQ((uint8_t)0xFF, opcode2byte(Opcode::OP_RESERVED_xFF));
    EXPECT_EQ((uint8_t)0xF9, opcode2byte(Opcode::OP_RESUME));
    EXPECT_EQ((uint8_t)0xFA, opcode2byte(Opcode::OP_SAVE));
    EXPECT_EQ((uint8_t)0xE0, opcode2byte(Opcode::OP_SETH));
    EXPECT_EQ((uint8_t)0xE3, opcode2byte(Opcode::OP_SETL));
    EXPECT_EQ((uint8_t)0xE1, opcode2byte(Opcode::OP_SETMH));
    EXPECT_EQ((uint8_t)0xE2, opcode2byte(Opcode::OP_SETML));
    EXPECT_EQ((uint8_t)0x0C, opcode2byte(Opcode::OP_SFLOT));
    EXPECT_EQ((uint8_t)0x0D, opcode2byte(Opcode::OP_SFLOTI));
    EXPECT_EQ((uint8_t)0x0E, opcode2byte(Opcode::OP_SFLOTU));
    EXPECT_EQ((uint8_t)0x0F, opcode2byte(Opcode::OP_SFLOTUI));
    EXPECT_EQ((uint8_t)0x38, opcode2byte(Opcode::OP_SL));
    EXPECT_EQ((uint8_t)0x39, opcode2byte(Opcode::OP_SLI));
    EXPECT_EQ((uint8_t)0x3A, opcode2byte(Opcode::OP_SLU));
    EXPECT_EQ((uint8_t)0x3B, opcode2byte(Opcode::OP_SLUI));
    EXPECT_EQ((uint8_t)0x3C, opcode2byte(Opcode::OP_SR));
    EXPECT_EQ((uint8_t)0x3D, opcode2byte(Opcode::OP_SRI));
    EXPECT_EQ((uint8_t)0x3E, opcode2byte(Opcode::OP_SRU));
    EXPECT_EQ((uint8_t)0x3F, opcode2byte(Opcode::OP_SRUI));
    EXPECT_EQ((uint8_t)0xA0, opcode2byte(Opcode::OP_STB));
    EXPECT_EQ((uint8_t)0xA1, opcode2byte(Opcode::OP_STBI));
    EXPECT_EQ((uint8_t)0xA2, opcode2byte(Opcode::OP_STBU));
    EXPECT_EQ((uint8_t)0xA3, opcode2byte(Opcode::OP_STBUI));
    EXPECT_EQ((uint8_t)0xB4, opcode2byte(Opcode::OP_STCO));
    EXPECT_EQ((uint8_t)0xB5, opcode2byte(Opcode::OP_STCOI));
    EXPECT_EQ((uint8_t)0xB2, opcode2byte(Opcode::OP_STHT));
    EXPECT_EQ((uint8_t)0xB3, opcode2byte(Opcode::OP_STHTI));
    EXPECT_EQ((uint8_t)0xAC, opcode2byte(Opcode::OP_STO));
    EXPECT_EQ((uint8_t)0xAD, opcode2byte(Opcode::OP_STOI));
    EXPECT_EQ((uint8_t)0xAE, opcode2byte(Opcode::OP_STOU));
    EXPECT_EQ((uint8_t)0xAF, opcode2byte(Opcode::OP_STOUI));
    EXPECT_EQ((uint8_t)0xB0, opcode2byte(Opcode::OP_STSF));
    EXPECT_EQ((uint8_t)0xB1, opcode2byte(Opcode::OP_STSFI));
    EXPECT_EQ((uint8_t)0xA8, opcode2byte(Opcode::OP_STT));
    EXPECT_EQ((uint8_t)0xA9, opcode2byte(Opcode::OP_STTI));
    EXPECT_EQ((uint8_t)0xAA, opcode2byte(Opcode::OP_STTU));
    EXPECT_EQ((uint8_t)0xAB, opcode2byte(Opcode::OP_STTUI));
    EXPECT_EQ((uint8_t)0xB6, opcode2byte(Opcode::OP_STUNC));
    EXPECT_EQ((uint8_t)0xB7, opcode2byte(Opcode::OP_STUNCI));
    EXPECT_EQ((uint8_t)0xA4, opcode2byte(Opcode::OP_STW));
    EXPECT_EQ((uint8_t)0xA5, opcode2byte(Opcode::OP_STWI));
    EXPECT_EQ((uint8_t)0xA6, opcode2byte(Opcode::OP_STWU));
    EXPECT_EQ((uint8_t)0xA7, opcode2byte(Opcode::OP_STWUI));
    EXPECT_EQ((uint8_t)0x24, opcode2byte(Opcode::OP_SUB));
    EXPECT_EQ((uint8_t)0x25, opcode2byte(Opcode::OP_SUBI));
    EXPECT_EQ((uint8_t)0x26, opcode2byte(Opcode::OP_SUBU));
    EXPECT_EQ((uint8_t)0x27, opcode2byte(Opcode::OP_SUBUI));
    EXPECT_EQ((uint8_t)0xFD, opcode2byte(Opcode::OP_SWYM));
    EXPECT_EQ((uint8_t)0xFC, opcode2byte(Opcode::OP_SYNC));
    EXPECT_EQ((uint8_t)0x00, opcode2byte(Opcode::OP_SYSCALL));
    EXPECT_EQ((uint8_t)0xFB, opcode2byte(Opcode::OP_UNSAVE));
    EXPECT_EQ((uint8_t)0xC6, opcode2byte(Opcode::OP_XOR));
    EXPECT_EQ((uint8_t)0xC7, opcode2byte(Opcode::OP_XORI));
    EXPECT_EQ((uint8_t)0x7E, opcode2byte(Opcode::OP_ZSEV));
    EXPECT_EQ((uint8_t)0x7F, opcode2byte(Opcode::OP_ZSEVI));
    EXPECT_EQ((uint8_t)0x70, opcode2byte(Opcode::OP_ZSN));
    EXPECT_EQ((uint8_t)0x71, opcode2byte(Opcode::OP_ZSNI));
    EXPECT_EQ((uint8_t)0x78, opcode2byte(Opcode::OP_ZSNN));
    EXPECT_EQ((uint8_t)0x79, opcode2byte(Opcode::OP_ZSNNI));
    EXPECT_EQ((uint8_t)0x7C, opcode2byte(Opcode::OP_ZSNP));
    EXPECT_EQ((uint8_t)0x7D, opcode2byte(Opcode::OP_ZSNPI));
    EXPECT_EQ((uint8_t)0x7A, opcode2byte(Opcode::OP_ZSNZ));
    EXPECT_EQ((uint8_t)0x7B, opcode2byte(Opcode::OP_ZSNZI));
    EXPECT_EQ((uint8_t)0x76, opcode2byte(Opcode::OP_ZSOD));
    EXPECT_EQ((uint8_t)0x77, opcode2byte(Opcode::OP_ZSODI));
    EXPECT_EQ((uint8_t)0x74, opcode2byte(Opcode::OP_ZSP));
    EXPECT_EQ((uint8_t)0x75, opcode2byte(Opcode::OP_ZSPI));
    EXPECT_EQ((uint8_t)0x72, opcode2byte(Opcode::OP_ZSZ));
    EXPECT_EQ((uint8_t)0x73, opcode2byte(Opcode::OP_ZSZI));
}
